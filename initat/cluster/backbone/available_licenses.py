# -*- coding: utf-8 -*-
#
# Copyright (C) 2015-2017, Andreas Lang-Nevyjel
#
# Send feedback to: <lang-nevyjel@init.at>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License Version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#

from collections import namedtuple

from enum import Enum

# NOTE: This file has been automatically generated by generate_license_list.py
# DO NOT EDIT

__all__ = ['get_available_licenses', 'LicenseEnum', 'LicenseParameterTypeEnum']


# NOTE: This file has been automatically generated by generate_license_list.py
# DO NOT EDIT


# NOTE: due to automatic generation, the values of this license enum may not be stable
# do not use them in the database, only their id string values

class LicenseEnumDef(object):
    def __init__(self, lic_id, name, description, warn_percentage, crit_percentage, ova_repr):
        self.lic_id = lic_id
        self.name = name
        self.description = description
        self.warn_percentage = warn_percentage
        self.crit_percentage = crit_percentage
        self.ova_repr = ova_repr


class LicenseEnum(Enum):
    fast_frontend = LicenseEnumDef(
        'fast_frontend',
        'Allegro Webfrontend',
        'Transforms the Webfrontend into a super-fast single-page app',
        80,
        90,
        'entry',
    )
    asset = LicenseEnumDef(
        'asset',
        'Asset Management',
        'You can handle assets',
        80,
        90,
        'entry',
    )
    snapshot = LicenseEnumDef(
        'snapshot',
        'Database Snapshot',
        'Keep track of the configuration changes',
        80,
        90,
        'entry',
    )
    discovery_server = LicenseEnumDef(
        'discovery_server',
        'Discovery Server',
        'Automatical configuration using SNMP',
        80,
        90,
        'entry',
    )
    distributed_monitoring = LicenseEnumDef(
        'distributed_monitoring',
        'Distributed Monitoring',
        'Distribute monitoring load to multiple workers',
        80,
        90,
        'entry',
    )
    graphing = LicenseEnumDef(
        'graphing',
        'Graphing',
        'Comprehensive graphical evaluation using RRDs',
        80,
        90,
        'entry',
    )
    hpc_workbench = LicenseEnumDef(
        'hpc_workbench',
        'HPC Workbench',
        'Convenient interface for job management',
        80,
        90,
        'entry',
    )
    kpi = LicenseEnumDef(
        'kpi',
        'Key Performance Indicators',
        'Calculate key figures to measure the performance of your cluster',
        80,
        90,
        'entry',
    )
    ext_license = LicenseEnumDef(
        'ext_license',
        'License Optimization Management',
        'Interactive graphic license utlilization evaluation',
        80,
        90,
        'entry',
    )
    md_config_server = LicenseEnumDef(
        'md_config_server',
        'MD Config Server',
        'Monitoring Daemon Configuration Writer',
        80,
        90,
        'Service',
    )
    monitoring_dashboard = LicenseEnumDef(
        'monitoring_dashboard',
        'Monitoring Dashboard',
        'Central monitoring unit consisting of livestatus, geolocation and maplocation',
        80,
        90,
        'entry',
    )
    netboot = LicenseEnumDef(
        'netboot',
        'Netboot',
        'Manage the boot process of your nodes',
        80,
        90,
        'Node',
    )
    network_weathermap = LicenseEnumDef(
        'network_weathermap',
        'Network Weathermap',
        'Overview of relevant network utilization data',
        80,
        90,
        'entry',
    )
    notification = LicenseEnumDef(
        'notification',
        'Notifications',
        'Status notifications via mail and text messages',
        80,
        90,
        'entry',
    )
    package_install = LicenseEnumDef(
        'package_install',
        'Package Install',
        'Configure repositories and install packages on your nodes',
        80,
        90,
        'entry',
    )
    reporting = LicenseEnumDef(
        'reporting',
        'Reporting',
        'Generate graphs to view the state of your cluster',
        80,
        90,
        'entry',
    )
    rms = LicenseEnumDef(
        'rms',
        'Resource Management System',
        'Overview over your job system',
        80,
        90,
        'entry',
    )
    rootkit_hunter = LicenseEnumDef(
        'rootkit_hunter',
        'Rootkit Hunter',
        'Security scan for installations',
        80,
        90,
        'entry',
    )
    virtual_desktop = LicenseEnumDef(
        'virtual_desktop',
        'Virtual Desktop',
        'Manage virtual desktop sessions on your cluster',
        80,
        90,
        'entry',
    )

# NOTE: This file has been automatically generated by generate_license_list.py
# DO NOT EDIT


class LicenseParameterTypeEnum(Enum):
    ovum = 'ovum'

# NOTE: This file has been automatically generated by generate_license_list.py
# DO NOT EDIT


def get_available_licenses():
    from initat.cluster.backbone.models.license import InitProduct
    AvailableLicense = namedtuple('AvailableLicense', ['id', 'enum_value', 'name', 'description', 'product'])

    available_licenses = []

    available_licenses.append(
        AvailableLicense(
            id='md_config_server',
            enum_value=LicenseEnum.md_config_server,
            name='MD Config Server',
            description='Monitoring Daemon Configuration Writer',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='kpi',
            enum_value=LicenseEnum.kpi,
            name='Key Performance Indicators',
            description='Calculate key figures to measure the performance of your cluster',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='graphing',
            enum_value=LicenseEnum.graphing,
            name='Graphing',
            description='Comprehensive graphical evaluation using RRDs',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='discovery_server',
            enum_value=LicenseEnum.discovery_server,
            name='Discovery Server',
            description='Automatical configuration using SNMP',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='monitoring_dashboard',
            enum_value=LicenseEnum.monitoring_dashboard,
            name='Monitoring Dashboard',
            description='Central monitoring unit consisting of livestatus, geolocation and maplocation',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='distributed_monitoring',
            enum_value=LicenseEnum.distributed_monitoring,
            name='Distributed Monitoring',
            description='Distribute monitoring load to multiple workers',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='snapshot',
            enum_value=LicenseEnum.snapshot,
            name='Database Snapshot',
            description='Keep track of the configuration changes',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='notification',
            enum_value=LicenseEnum.notification,
            name='Notifications',
            description='Status notifications via mail and text messages',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='network_weathermap',
            enum_value=LicenseEnum.network_weathermap,
            name='Network Weathermap',
            description='Overview of relevant network utilization data',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='rootkit_hunter',
            enum_value=LicenseEnum.rootkit_hunter,
            name='Rootkit Hunter',
            description='Security scan for installations',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='reporting',
            enum_value=LicenseEnum.reporting,
            name='Reporting',
            description='Generate graphs to view the state of your cluster',
            product=InitProduct.NOCTUA,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='ext_license',
            enum_value=LicenseEnum.ext_license,
            name='License Optimization Management',
            description='Interactive graphic license utlilization evaluation',
            product=InitProduct.NESTOR,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='virtual_desktop',
            enum_value=LicenseEnum.virtual_desktop,
            name='Virtual Desktop',
            description='Manage virtual desktop sessions on your cluster',
            product=InitProduct.NESTOR,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='hpc_workbench',
            enum_value=LicenseEnum.hpc_workbench,
            name='HPC Workbench',
            description='Convenient interface for job management',
            product=InitProduct.NESTOR,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='package_install',
            enum_value=LicenseEnum.package_install,
            name='Package Install',
            description='Configure repositories and install packages on your nodes',
            product=InitProduct.NESTOR,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='rms',
            enum_value=LicenseEnum.rms,
            name='Resource Management System',
            description='Overview over your job system',
            product=InitProduct.NESTOR,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='netboot',
            enum_value=LicenseEnum.netboot,
            name='Netboot',
            description='Manage the boot process of your nodes',
            product=InitProduct.NESTOR,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='fast_frontend',
            enum_value=LicenseEnum.fast_frontend,
            name='Allegro Webfrontend',
            description='Transforms the Webfrontend into a super-fast single-page app',
            product=None,
        )
    )
    available_licenses.append(
        AvailableLicense(
            id='asset',
            enum_value=LicenseEnum.asset,
            name='Asset Management',
            description='You can handle assets',
            product=InitProduct.NOCTUA,
        )
    )

    return available_licenses
