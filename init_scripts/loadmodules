#!/bin/bash
# Copyright (c) 2001-2006,2012-2017 Andreas Lang-Nevyjel init.at
#
#
# RedHat stuff
# chkconfig: 2345 8 92
# description: load modules at startup
#
### BEGIN INIT INFO
# Provides:      loadmodules
# Required-Start: $syslog
# Should-Start: openibd
# Required-Stop: $network
# Default-Start: 2 3 5
# Default-Stop: 0 1 6
# Description:   load modules at startup
### END INIT INFO

export SYSTEMD_NO_WRAP="1"
export SYSTEMCTL_SKIP_REDIRECT="1"
export _SYSTEMCTL_SKIP_REDIRECT="1"

if [ -f /etc/rc.status ] ; then
    . /etc/rc.status
else
    . /etc/rc.status_suse
fi

rc_reset

case "$1" in
    start)  echo -n "Loading modules..."
        unset mods
        if [ -f /etc/modules ] ; then
            mods=`cat /etc/modules`
        fi
    
        if [ "${mods:-0}" = "0" ] ; then
            echo -n " no modules to load"
        else
            echo -n " "
        # remove leading whitespace; [[:space:]] is something like echo -e ' \t\n'
            sed -e '/^[[:space:]]*/s/[[:space:]]*//' -e '/^#/d;' -e '/^$/d;' /etc/modules | while read modl ; do
                mod=`echo $modl | cut -d " " -f 1`
                modarg="`echo $modl | egrep '[[:space:]]' | cut -d " " -f 2-`"
                if [ "${mod:-0}" != "0" ] ; then
                    logger "Doing modprobe $mod (args $modarg)"
                    modprobe $mod $modarg > /dev/null 2>&1 && {
                        echo -n "${done}${mod}${norm}-" ;
                    } || {
                        echo -n "${warn}${mod}${norm}-" ;
                    }
                fi
            done
            true
        fi
        rc_status -v
        ;;
    stop)
        echo -n "Not implemented..."
        rc_failed ;
        rc_status -v
        ;;
    restart)
        echo "reloading modules ..."
        $0 stop && sleep 2 ; $0 start || return=$rc_failed
        ;;
    status)
        echo -n "Showing loaded modules ..."
        rc_status -v
        /sbin/lsmod
        ;;
    *)
        echo "Usage: $0 {start|stop|status}"
        exit 1
        ;;
esac

rc_exit
